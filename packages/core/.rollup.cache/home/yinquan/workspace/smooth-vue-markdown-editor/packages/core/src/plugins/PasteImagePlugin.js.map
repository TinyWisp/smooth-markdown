{"version":3,"file":"PasteImagePlugin.js","sourceRoot":"","sources":["PasteImagePlugin.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,KAAK,CAAA;AAE5B;;GAEG;AACH,MAAM,gBAAgB;IACpB,oBAAoB,CAAsB;IAE1C;;OAEG;IACH,YAAY,QAAkB;QAC5B,IAAI,CAAC,oBAAoB,GAAG;YAC1B,KAAK,EAAE,KAAK,EAAE,KAAY,EAAE,EAAE;gBAC5B,MAAM,MAAM,GAAG,KAAuB,CAAA;gBACtC,IAAG,MAAM,CAAC,aAAa,EAAE,KAAK,EAAE;oBAC9B,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE;wBAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;4BACnC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;4BAC9B,IAAI,IAAI,EAAE;gCACR,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAA;gCAChC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;6BACtB;yBACF;qBACF;iBACF;YAEH,CAAC;SACF,CAAA;IACH,CAAC;IAED;;;;OAIG;IACK,WAAW,CAAE,GAAW;QAC9B,MAAM,cAAc,GAAG,MAAM,CAAoB,gBAAgB,CAAC,CAAA;QAClE,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAA;YAClF,OAAM;SACP;QACD,MAAM,OAAO,GAAG,cAAc,EAAE,CAAA;QAChC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE;YAC/B,GAAG;YACH,KAAK,EAAE,EAAE;SACV,CAAC,CAAA;IACJ,CAAC;CACF;AAED,SAAS,UAAU,CAAC,QAAkB;IACpC,OAAO,IAAI,gBAAgB,CAAC,QAAQ,CAAC,CAAA;AACvC,CAAC;AAED,eAAe,UAAU,CAAA","sourcesContent":["import type { CoreContext, CmDomEventHandlerMap, FnUpload } from '../CoreEditor/types'\nimport type { CorePlugin } from './CorePlugin'\nimport { inject } from 'vue' \n\n/**\n * upload the image from clipboard and insert it into the editor\n */\nclass PasteImagePlugin implements CorePlugin {\n  cmDomEventHandlerMap: CmDomEventHandlerMap\n\n  /**\n   * @param fnUpload : the upload function\n   */\n  constructor(fnUpload: FnUpload) {\n    this.cmDomEventHandlerMap = {\n      paste: async (event: Event) => {\n        const cevent = event as ClipboardEvent\n        if(cevent.clipboardData?.items) {\n          for (const item of cevent.clipboardData.items) {\n            if (item.type.indexOf(\"image\") >= 0) {\n              const file = item.getAsFile();\n              if (file) {\n                const url = await fnUpload(file)\n                this.insertImage(url)\n              }\n            }\n          }\n        }\n\n      }\n    }\n  }\n\n  /**\n   * insert an image into the editor\n   * @param url \n   * @returns \n   */\n  private insertImage (url: string): void {\n    const getCoreContext = inject<() => CoreContext>('getCoreContext')\n    if (!getCoreContext) {\n      console.error('PasteImagePlugin Error: cannot access the getCoreContext() method')\n      return\n    }\n    const context = getCoreContext()\n    context.methods.command('image', {\n      url,\n      title: '',\n    })\n  }\n}\n\nfunction pasteImage(fnUpload: FnUpload): PasteImagePlugin {\n  return new PasteImagePlugin(fnUpload)\n}\n\nexport default pasteImage "]}